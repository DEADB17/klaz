export const NONE = "";

const pseudoList = [
  NONE,
  "active",
  "after",
  "before",
  "checked",
  "disabled",
  "empty",
  "enabled",
  "first-child",
  "first-letter",
  "first-line",
  "first-of-type",
  "focus",
  "hover",
  "lang",
  "last-child",
  "last-of-type",
  "link",
  "not(",
  "nth-child(",
  "nth-last-child(",
  "nth-last-of-type(",
  "nth-of-type(",
  "only-child",
  "only-of-type",
  "root",
  "target",
  "visited",
];

const propList = [
  "align-content",
  "align-items",
  "align-self",
  "all", // shorthand
  "animation", // shorthand
  "animation-delay",
  "animation-direction",
  "animation-duration",
  "animation-fill-mode",
  "animation-iteration-count",
  "animation-name",
  "animation-play-state",
  "animation-timing-function",
  "azimuth",
  "background", // shorthand
  "background-attachment",
  "background-blend-mode",
  "background-clip",
  "background-color",
  "background-image",
  "background-origin",
  "background-position",
  "background-repeat",
  "background-size",
  "border", // shorthand
  "border-bottom", // shorthand
  "border-bottom-color",
  "border-bottom-left-radius",
  "border-bottom-right-radius",
  "border-bottom-style",
  "border-bottom-width",
  "border-collapse",
  "border-color", // shorthand
  "border-image", // shorthand
  "border-image-outset",
  "border-image-repeat",
  "border-image-slice",
  "border-image-source",
  "border-image-width",
  "border-left", // shorthand
  "border-left-color",
  "border-left-style",
  "border-left-width",
  "border-radius", // shorthand
  "border-right", // shorthand
  "border-right-color",
  "border-right-style",
  "border-right-width",
  "border-spacing",
  "border-style", // shorthand
  "border-top", // shorthand
  "border-top-color",
  "border-top-left-radius",
  "border-top-right-radius",
  "border-top-style",
  "border-top-width",
  "border-width", // shorthand
  "bottom",
  "box-decoration-break",
  "box-shadow",
  "box-sizing",
  "break-after",
  "break-before",
  "break-inside",
  "caption-side",
  "caret-color",
  "clear",
  "clip",
  "clip-path",
  "clip-rule",
  "color",
  "color-interpolation-filters",
  "column-count",
  "column-fill",
  "column-gap",
  "column-rule",
  "column-rule-color",
  "column-rule-style",
  "column-rule-width",
  "columns",
  "column-span",
  "column-width",
  "contain",
  "content",
  "counter-increment",
  "counter-reset",
  "cue", // shorthand
  "cue-after",
  "cue-before",
  "cursor",
  "direction",
  "display",
  "elevation",
  "empty-cells",
  "filter",
  "flex", // shorthand
  "flex-basis",
  "flex-direction",
  "flex-flow",
  "flex-grow",
  "flex-shrink",
  "flex-wrap",
  "float",
  "flood-color",
  "flood-opacity",
  "font", // shorthand
  "font-family",
  "font-feature-settings",
  "font-kerning",
  "font-size",
  "font-size-adjust",
  "font-stretch",
  "font-style",
  "font-synthesis",
  "font-variant",
  "font-variant-caps",
  "font-variant-east-asian",
  "font-variant-ligatures",
  "font-variant-numeric",
  "font-variant-position",
  "font-weight",
  "gap",
  "globalcompositeoperation",
  "glyph-orientation-vertical",
  "grid", // shorthand
  "grid-area",
  "grid-auto-columns",
  "grid-auto-flow",
  "grid-auto-rows",
  "grid-column", // shorthand
  "grid-column-end",
  "grid-column-gap",
  "grid-column-start",
  "grid-gap",
  "grid-row", // shorthand
  "grid-row-end",
  "grid-row-gap",
  "grid-row-start",
  "grid-template", // shorthand
  "grid-template-areas",
  "grid-template-columns",
  "grid-template-rows",
  "hanging-punctuation",
  "height",
  "hyphens",
  "image-orientation",
  "image-rendering",
  "image-resolution",
  "isolation",
  "justify-content",
  "justify-items",
  "justify-self",
  "left",
  "letter-spacing",
  "lighting-color",
  "line-break",
  "line-height",
  "list-style", // shorthand
  "list-style-image",
  "list-style-position",
  "list-style-type",
  "margin", // shorthand
  "margin-bottom",
  "margin-left",
  "margin-right",
  "margin-top",
  "mask", // shorthand
  "mask-border", // shorthand
  "mask-border-mode",
  "mask-border-outset",
  "mask-border-repeat",
  "mask-border-slice",
  "mask-border-source",
  "mask-border-width",
  "mask-clip",
  "mask-composite",
  "mask-image",
  "mask-mode",
  "mask-origin",
  "mask-position",
  "mask-repeat",
  "mask-size",
  "mask-type",
  "max-height",
  "max-width",
  "min-height",
  "min-width",
  "mix-blend-mode",
  "object-fit",
  "object-position",
  "opacity",
  "order",
  "orphans",
  "outline", // shorthand
  "outline-color",
  "outline-offset",
  "outline-style",
  "outline-width",
  "overflow",
  "overflow-wrap",
  "overflow-x",
  "overflow-y",
  "padding", // shorthand
  "padding-bottom",
  "padding-left",
  "padding-right",
  "padding-top",
  "page-break-after",
  "page-break-before",
  "page-break-inside",
  "pause", // shorthand
  "pause-after",
  "pause-before",
  "pitch", // shorthand
  "pitch-range",
  "place-content",
  "place-items",
  "place-self",
  "play-during",
  "position",
  "quotes",
  "resize",
  "rest", // shorthand
  "rest-after",
  "rest-before",
  "richness",
  "right",
  "row-gap",
  "scroll-margin", // shorthand
  "scroll-margin-block",
  "scroll-margin-block-end",
  "scroll-margin-block-start",
  "scroll-margin-bottom",
  "scroll-margin-inline",
  "scroll-margin-inline-end",
  "scroll-margin-inline-start",
  "scroll-margin-left",
  "scroll-margin-right",
  "scroll-margin-top",
  "scroll-padding", // shorthand
  "scroll-padding-block",
  "scroll-padding-block-end",
  "scroll-padding-block-start",
  "scroll-padding-bottom",
  "scroll-padding-inline",
  "scroll-padding-inline-end",
  "scroll-padding-inline-start",
  "scroll-padding-left",
  "scroll-padding-right",
  "scroll-padding-top",
  "scroll-snap-align",
  "scroll-snap-stop",
  "scroll-snap-type",
  "shape-image-threshold",
  "shape-margin",
  "shape-outside",
  "speak",
  "speak-as",
  "speak-header",
  "speak-numeral",
  "speak-punctuation",
  "speech-rate",
  "stress",
  "table-layout",
  "tab-size",
  "text-align",
  "text-align-all",
  "text-align-last",
  "text-combine-upright",
  "text-decoration", // shorthand
  "text-decoration-color",
  "text-decoration-line",
  "text-decoration-style",
  "text-emphasis", // shorthand
  "text-emphasis-color",
  "text-emphasis-position",
  "text-emphasis-style",
  "text-indent",
  "text-justify",
  "text-orientation",
  "text-overflow",
  "text-shadow",
  "text-transform",
  "text-underline-position",
  "top",
  "transform",
  "transform-box",
  "transform-origin",
  "transition", // shorthand
  "transition-delay",
  "transition-duration",
  "transition-property",
  "transition-timing-function",
  "unicode-bidi",
  "vertical-align",
  "visibility",
  "voice-balance",
  "voice-duration",
  "voice-family",
  "voice-pitch",
  "voice-range",
  "voice-rate",
  "voice-stress",
  "voice-volume",
  "volume",
  "white-space",
  "widows",
  "width",
  "will-change",
  "word-break",
  "word-spacing",
  "word-wrap",
  "writing-mode",
  "z-index",
];

// TODO(db17): Remove non-constant values
// TODO(db17): Add colours
// TODO(db17): Sort by frequency
const valueList = [
  "add",
  "additive",
  "alias",
  "all",
  "allow-end",
  "all-scroll",
  "alpha",
  "alphabetic",
  "alternate",
  "alternate-reverse",
  "always",
  "<angle>",
  "<angle>? flip",
  "anywhere",
  "arabic-indic",
  "arithmetic",
  "armenian",
  "atop",
  "aural",
  "auto",
  "auto-fill",
  "auto-fit",
  "[ auto-flow && dense? ] <'grid-auto-rows'>? / <'grid-template-columns'>",
  "avoid",
  "avoid-column",
  "avoid-page",
  "avoid-region",
  "backgroundalpha",
  "backgroundimage",
  "backwards",
  "balance",
  "balance-all",
  "baseline",
  "<basic-shape>",
  "bengali",
  "bidi-override",
  "blink",
  "block",
  "border-box",
  "both",
  "bottom",
  "braille",
  "break-all",
  "break-spaces",
  "break-word",
  "bullets",
  "cambodian",
  "capitalize",
  "cell",
  "center",
  "ch",
  "circle",
  "cjk-decimal",
  "cjk-earthly-branch",
  "cjk-heavenly-stem",
  "cjk-ideographic",
  "clip",
  "clone",
  "close-quote",
  "closest-corner",
  "closest-side",
  "cm",
  "coarse",
  "<color>",
  "color",
  "color-burn",
  "color-dodge",
  "col-resize",
  "column",
  "column-reverse",
  "contain",
  "content",
  "content-box",
  "contents",
  "context-menu",
  "copy",
  "<counter-style-name>",
  "cover",
  "crisp-edges",
  "crosshair",
  "currentcolor",
  "<custom-ident>",
  "cyclic",
  "darken",
  "dashed",
  "decimal",
  "decimal-leading-zero",
  "default",
  "deg",
  "dense",
  "devanagari",
  "difference",
  "disc",
  "disclosure-closed",
  "disclosure-open",
  "discrete",
  "distribute",
  "dot",
  "dotted",
  "double",
  "double-circle",
  "dpcm",
  "dpi",
  "dppx",
  "duplicate",
  "each-line",
  "ease",
  "ease-in",
  "ease-in-out",
  "ease-out",
  "ellipse",
  "ellipsis",
  "em",
  "embed",
  "embossed",
  "end",
  "<ending-shape>",
  "e-resize",
  "ethiopic-numeric",
  "evenodd",
  "ew-resize",
  "ex",
  "exclude",
  "exclusion",
  "extends",
  "farthest-corner",
  "farthest-side",
  "fast",
  "fill",
  "fill-box",
  "filled",
  "fillpaint",
  "fine",
  "first",
  "first baseline",
  "fit-content()",
  "fixed",
  "<flex>",
  "flex",
  "<'flex-basis'>",
  "flex-end",
  "<'flex-grow'>",
  "<'flex-shrink'>",
  "flex-start",
  "font-feature-settings",
  "font-variant",
  "force-end",
  "forwards",
  "fr",
  "from-image",
  "fr unit",
  "full-size-kana",
  "full-width",
  "gamma",
  "georgian",
  "grab",
  "grabbing",
  "grad",
  "grid",
  "<'grid-template-rows'> / [ auto-flow && dense? ] <'grid-auto-columns'>?",
  "<'grid-template-rows'> / <'grid-template-columns'>",
  "groove",
  "gujarati",
  "gurmukhi",
  "handheld",
  "hanging",
  "hard-light",
  "hebrew",
  "help",
  "hidden",
  "high-quality",
  "hiragana",
  "hiragana-iroha",
  "horizontal-tb",
  "hover",
  "hue",
  "hz",
  "identity",
  "<image>",
  "in",
  "infinite",
  "inherit",
  "initial",
  "inline",
  "inline-block",
  "inline-flex",
  "inline-grid",
  "inline-table",
  "inset",
  "<integer>",
  "<integer> && <custom-ident>?",
  "inter-character",
  "interlace",
  "intersect",
  "inter-word",
  "invert",
  "isolate",
  "isolate-override",
  "japanese-formal",
  "japanese-informal",
  "jump-both",
  "jump-end",
  "jump-none",
  "jump-start",
  "justify",
  "justify-all",
  "kannada",
  "katakana",
  "katakana-iroha",
  "keep-all",
  "<keyframes-name>",
  "khmer",
  "khz",
  "korean-hangul-formal",
  "korean-hanja-formal",
  "korean-hanja-informal",
  "landscape",
  "lao",
  "last",
  "last baseline",
  "layout",
  "left",
  "legacy",
  "<length>",
  "<length-percentage>",
  "<length-percentage>{2}",
  "lighten",
  "linear",
  "linearrgb",
  "[ <line-names>? <string> <track-size>? <line-names>? ]+ [ / <explicit-track-list> ]?",
  "line-through",
  "list-item",
  "local",
  "loose",
  "lower-alpha",
  "lower-armenian",
  "lowercase",
  "lower-greek",
  "lower-latin",
  "lower-roman",
  "ltr",
  "luminance",
  "luminosity",
  "malayalam",
  "mandatory",
  "manual",
  "margin-box",
  "match-parent",
  "match-source",
  "max-content",
  "medium",
  "min-content",
  "minmax()",
  "mixed",
  "mm",
  "mongolian",
  "move",
  "ms",
  "multiply",
  "myanmar",
  "ne-resize",
  "nesw-resize",
  "no-clip",
  "no-close-quote",
  "no-composite",
  "no-drop",
  "none",
  "none!!font-variant",
  "nonzero",
  "no-open-quote",
  "no-repeat",
  "normal",
  "normal!!font-feature-settings",
  "normal!!font-variant",
  "not",
  "not-allowed",
  "nowrap",
  "n-resize",
  "ns-resize",
  "<number>",
  "numbers",
  "numeric",
  "nw-resize",
  "nwse-resize",
  "objectboundingbox",
  "only",
  "open",
  "open-quote",
  "optional-paged",
  "oriya",
  "outset",
  "over",
  "overlay",
  "overline",
  "p3",
  "padding-box",
  "page",
  "paged",
  "paint",
  "paused",
  "pc",
  "<percentage>",
  "persian",
  "pixelated",
  "pixel unit",
  "plaintext",
  "pointer",
  "portrait",
  "<position>",
  "pre",
  "pre-line",
  "pre-wrap",
  "print",
  "progress",
  "progressive",
  "projection",
  "proximity",
  "pt",
  "px",
  "q",
  "rad",
  "rec2020",
  "recto",
  "region",
  "rem",
  "repeat",
  "repeat-x",
  "repeat-y",
  "reverse",
  "revert",
  "ridge",
  "right",
  "rotate()",
  "round",
  "row",
  "row-resize",
  "row-reverse",
  "rtl",
  "running",
  "s",
  "safe",
  "saturation",
  "scale()",
  "scale-down",
  "scalex()",
  "scaley()",
  "screen",
  "scroll",
  "scroll-position",
  "self-end",
  "self-start",
  "se-resize",
  "sesame",
  "sideways",
  "sideways-right",
  "simp-chinese-formal",
  "simp-chinese-informal",
  "<size>",
  "size",
  "skew()",
  "skewx()",
  "skewy()",
  "slice",
  "slow",
  "smooth",
  "soft-light",
  "solid",
  "sourcealpha",
  "sourcegraphic",
  "space",
  "space-around",
  "space-between",
  "space-evenly",
  "span && [ <integer> || <custom-ident> ]",
  "speech",
  "spell-out",
  "square",
  "s-resize",
  "srgb",
  "start",
  "step-end",
  "step-start",
  "stretch",
  "strict",
  "<string>",
  "<string>+",
  "stroke-box",
  "strokepaint",
  "style",
  "subtract",
  "sw-resize",
  "symbolic",
  "table",
  "table-caption",
  "table-cell",
  "table-column",
  "table-column-group",
  "table-footer-group",
  "table-header-group",
  "table-row",
  "table-row-group",
  "tamil",
  "telugu",
  "text",
  "thai",
  "thick",
  "thin",
  "tibetan",
  "<time>",
  "top",
  "<track-list> | <auto-track-list>",
  "trad-chinese-formal",
  "trad-chinese-informal",
  "translate()",
  "translatex()",
  "translatey()",
  "triangle",
  "tty",
  "turn",
  "tv",
  "under",
  "underline",
  "unsafe",
  "unset",
  "upper-alpha",
  "upper-armenian",
  "uppercase",
  "upper-latin",
  "upper-roman",
  "upright",
  "<urange>",
  "<url>",
  "userspaceonuse",
  "verso",
  "vertical-lr",
  "vertical-rl",
  "vertical-text",
  "vh",
  "view-box",
  "vmax",
  "vmin",
  "vw",
  "wait",
  "words",
  "wrap",
  "wrap-reverse",
  "w-resize",
  "x",
  "xor",
  "y",
  "zoom-in",
  "zoom-out",
];

const base = 36;

/**
 * @arg {string[]} list
 * @arg {boolean} addPadding
 */
function toTab(list, addPadding = true) {
  const pad = list.length.toString(base).length;
  /** @type {Record<string,string>} */
  const res = {};
  let i = 0;
  if (addPadding) {
    for (const key of list) res[key] = (i++).toString(base).padStart(pad, "0");
  } else {
    for (const key of list) res[key] = (i++).toString(base);
  }
  return res;
}

export const pseudos = toTab(pseudoList);
export const props = toTab(propList);
export const values = toTab(valueList);
