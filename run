#!/usr/bin/env fish

# set server_port 8888
# set server_dir public

# function server -d "Start http server"
#     if test -n "$argv"
#         npx http-server $argv
#     else
#         npx http-server $server_dir --port $server_port
#     end
# end

# function start -d "Watch and serve"
#     npx http-server $server_dir --port $server_port &
#     watchexec make
#     kill %1
# end

function install -d "Install asdf and npm"
    asdf install
    npm install
end

function update -d "Update asdf and npm"
    echo "Updating asdf"
    asdf update
    asdf plugin update --all
    echo "Updating NPM"
    npm outdated
    npm update
end

function format -d "Format with prettier"
    if test -n "$argv"
        npx prettier $argv
    else
        npx prettier --ignore-path .gitignore --write .
    end
end

function lint -d "Lint using typescript (tsc)"
    tsc $argv
end

function tester -d "Run tests: specific file or test/*.js"
    set --local files test/*.js
    if test -n "$argv"
        set files $argv
    end
    for f in $files; node $f &; end
    wait
end

################################################################################
# Run private

function _desc -d "Print a function's description"
    set --local rx '^.+--description\s+[\'"]?((\\w|\\s)+).*' '$1'
    echo (functions $argv[1] | string replace --filter --regex $rx)
end

function _help -d "Usage"
    set --local rx '^\\s*function\\s+([^_]\\S+).*' '$1'
    set --local tasks (cat (status filename) | string replace --filter --regex $rx)
    printf '%s\n%s\n' 'run <task> [ rags ]' 'Available tasks:'
    printf '%s\n' (for task in $tasks; echo -e "- $task\t"(_desc $task); end) | column -t -s\t
end

if functions --query $argv[1]; time $argv[1] $argv[2..-1]; else; _help; end
